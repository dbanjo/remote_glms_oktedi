CREATE OR REPLACE TRIGGER STRANG.T_CUSTOMERS 
 AFTER INSERT OR UPDATE OR DELETE
 ON STRANG.CUSTOMERS
 FOR EACH ROW
DISABLE
DECLARE

 MOD_TYPE	VARCHAR2(20);
 RID		ROWID;
 pk1		varchar2(4000);
 pk2		varchar2(4000);

BEGIN

 IF NVL(GLOBAL_SITE.DISABLE_TRIGGER,FALSE) THEN RETURN; END IF;
 IF INSERTING
  THEN
   MOD_TYPE := 'I';
   RID := :NEW.ROWID;
   pk1 := :NEW.customer_id;
   pk2 := NULL;
 ELSIF UPDATING
  THEN
   MOD_TYPE := 'U';
   RID := :OLD.ROWID;
   pk1 := :NEW.customer_id;
   pk2 := NULL;
 ELSE
   if global_site.get_name is null then global_site.set_name; end if;
   MOD_TYPE := 'D';
   RID := :OLD.ROWID;
   pk1 := :OLD.customer_id;
   pk2 := NULL;
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','SITE_OWNER',RID,SYSDATE,MOD_TYPE,:OLD.SITE_OWNER,:NEW.SITE_OWNER,pk1,pk2);
   return;
 END IF;

 if global_site.get_name is null then global_site.set_name; end if;
 IF NOT((:OLD.CUSTOMER = :NEW.CUSTOMER) AND (:OLD.CUSTOMER IS NOT NULL AND :NEW.CUSTOMER IS NOT NULL)) AND NOT (:OLD.CUSTOMER IS NULL AND :NEW.CUSTOMER IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','CUSTOMER',RID,SYSDATE,MOD_TYPE,:OLD.CUSTOMER,:NEW.CUSTOMER,pk1,pk2);
 END IF;

 IF NOT((:OLD.STREET = :NEW.STREET) AND (:OLD.STREET IS NOT NULL AND :NEW.STREET IS NOT NULL)) AND NOT (:OLD.STREET IS NULL AND :NEW.STREET IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','STREET',RID,SYSDATE,MOD_TYPE,:OLD.STREET,:NEW.STREET,pk1,pk2);
 END IF;

 IF NOT((:OLD.POSTCODE = :NEW.POSTCODE) AND (:OLD.POSTCODE IS NOT NULL AND :NEW.POSTCODE IS NOT NULL)) AND NOT (:OLD.POSTCODE IS NULL AND :NEW.POSTCODE IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','POSTCODE',RID,SYSDATE,MOD_TYPE,:OLD.POSTCODE,:NEW.POSTCODE,pk1,pk2);
 END IF;

 IF NOT((:OLD.SUBURB = :NEW.SUBURB) AND (:OLD.SUBURB IS NOT NULL AND :NEW.SUBURB IS NOT NULL)) AND NOT (:OLD.SUBURB IS NULL AND :NEW.SUBURB IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','SUBURB',RID,SYSDATE,MOD_TYPE,:OLD.SUBURB,:NEW.SUBURB,pk1,pk2);
 END IF;

 IF NOT((:OLD.STATE = :NEW.STATE) AND (:OLD.STATE IS NOT NULL AND :NEW.STATE IS NOT NULL)) AND NOT (:OLD.STATE IS NULL AND :NEW.STATE IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','STATE',RID,SYSDATE,MOD_TYPE,:OLD.STATE,:NEW.STATE,pk1,pk2);
 END IF;

 IF NOT((:OLD.COUNTRY = :NEW.COUNTRY) AND (:OLD.COUNTRY IS NOT NULL AND :NEW.COUNTRY IS NOT NULL)) AND NOT (:OLD.COUNTRY IS NULL AND :NEW.COUNTRY IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','COUNTRY',RID,SYSDATE,MOD_TYPE,:OLD.COUNTRY,:NEW.COUNTRY,pk1,pk2);
 END IF;

 IF NOT((:OLD.EMAIL = :NEW.EMAIL) AND (:OLD.EMAIL IS NOT NULL AND :NEW.EMAIL IS NOT NULL)) AND NOT (:OLD.EMAIL IS NULL AND :NEW.EMAIL IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','EMAIL',RID,SYSDATE,MOD_TYPE,:OLD.EMAIL,:NEW.EMAIL,pk1,pk2);
 END IF;

 IF NOT((:OLD.ABN = :NEW.ABN) AND (:OLD.ABN IS NOT NULL AND :NEW.ABN IS NOT NULL)) AND NOT (:OLD.ABN IS NULL AND :NEW.ABN IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','ABN',RID,SYSDATE,MOD_TYPE,:OLD.ABN,:NEW.ABN,pk1,pk2);
 END IF;

 IF NOT((:OLD.PHONE = :NEW.PHONE) AND (:OLD.PHONE IS NOT NULL AND :NEW.PHONE IS NOT NULL)) AND NOT (:OLD.PHONE IS NULL AND :NEW.PHONE IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','PHONE',RID,SYSDATE,MOD_TYPE,:OLD.PHONE,:NEW.PHONE,pk1,pk2);
 END IF;

 IF NOT((:OLD.CITY = :NEW.CITY) AND (:OLD.CITY IS NOT NULL AND :NEW.CITY IS NOT NULL)) AND NOT (:OLD.CITY IS NULL AND :NEW.CITY IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','CITY',RID,SYSDATE,MOD_TYPE,:OLD.CITY,:NEW.CITY,pk1,pk2);
 END IF;

 IF NOT((:OLD.CUSTOMER_TYPE = :NEW.CUSTOMER_TYPE) AND (:OLD.CUSTOMER_TYPE IS NOT NULL AND :NEW.CUSTOMER_TYPE IS NOT NULL)) AND NOT (:OLD.CUSTOMER_TYPE IS NULL AND :NEW.CUSTOMER_TYPE IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','CUSTOMER_TYPE',RID,SYSDATE,MOD_TYPE,:OLD.CUSTOMER_TYPE,:NEW.CUSTOMER_TYPE,pk1,pk2);
 END IF;

 IF NOT((:OLD.FAX = :NEW.FAX) AND (:OLD.FAX IS NOT NULL AND :NEW.FAX IS NOT NULL)) AND NOT (:OLD.FAX IS NULL AND :NEW.FAX IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','FAX',RID,SYSDATE,MOD_TYPE,:OLD.FAX,:NEW.FAX,pk1,pk2);
 END IF;

 IF NOT((:OLD.CUSTOMER_ID = :NEW.CUSTOMER_ID) AND (:OLD.CUSTOMER_ID IS NOT NULL AND :NEW.CUSTOMER_ID IS NOT NULL)) AND NOT (:OLD.CUSTOMER_ID IS NULL AND :NEW.CUSTOMER_ID IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','CUSTOMER_ID',RID,SYSDATE,MOD_TYPE,:OLD.CUSTOMER_ID,:NEW.CUSTOMER_ID,:OLD.CUSTOMER_ID,pk2);
 END IF;

 IF NOT((:OLD.SHIPPER_ID = :NEW.SHIPPER_ID) AND (:OLD.SHIPPER_ID IS NOT NULL AND :NEW.SHIPPER_ID IS NOT NULL)) AND NOT (:OLD.SHIPPER_ID IS NULL AND :NEW.SHIPPER_ID IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','SHIPPER_ID',RID,SYSDATE,MOD_TYPE,:OLD.SHIPPER_ID,:NEW.SHIPPER_ID,pk1,pk2);
 END IF;

 IF NOT((:OLD.NOTIFY_PARTY_ID = :NEW.NOTIFY_PARTY_ID) AND (:OLD.NOTIFY_PARTY_ID IS NOT NULL AND :NEW.NOTIFY_PARTY_ID IS NOT NULL)) AND NOT (:OLD.NOTIFY_PARTY_ID IS NULL AND :NEW.NOTIFY_PARTY_ID IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','NOTIFY_PARTY_ID',RID,SYSDATE,MOD_TYPE,:OLD.NOTIFY_PARTY_ID,:NEW.NOTIFY_PARTY_ID,pk1,pk2);
 END IF;

 IF NOT((:OLD.SITE_OWNER = :NEW.SITE_OWNER) AND (:OLD.SITE_OWNER IS NOT NULL AND :NEW.SITE_OWNER IS NOT NULL)) AND NOT (:OLD.SITE_OWNER IS NULL AND :NEW.SITE_OWNER IS NULL)
  THEN
   INSERT INTO REPLICATION(REPLICATION_ID,SITE,TABLE_NAME,COLUMN_NAME,ROW_CHANGED,DATE_CHANGED,CHANGE_TYPE,OLD_VALUE,new_value,pk_col1,pk_col2) VALUES
    (S_REPLICATION.NEXTVAL,NVL(GLOBAL_SITE.SITE_NAME,'PRIMARY'),'CUSTOMERS','SITE_OWNER',RID,SYSDATE,MOD_TYPE,:OLD.SITE_OWNER,:NEW.SITE_OWNER,pk1,pk2);
 END IF;

END T_CUSTOMERS;
/
